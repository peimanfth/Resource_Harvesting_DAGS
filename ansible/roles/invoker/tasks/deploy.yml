---
# This role installs invokers.

- include: docker_login.yml

- name: "pull invoker image with tag {{docker_image_tag}}"
  shell: "docker pull {{docker_registry}}{{item}}:{{docker_image_tag}}"
  with_items:
    - '{{ docker_image_prefix }}/invoker'
  when: docker_registry != ""
  retries: 3

- name: "pull runtime action images with tag {{docker_image_tag}}"
  shell: "docker pull {{docker_registry}}{{docker_image_prefix}}/{{item}}:{{docker_image_tag}}"
  with_items: "{{ runtimesManifest.runtimes.values() | sum(start=[]) | selectattr('deprecated', 'equalto',false)  | map(attribute='image.name') | list | unique }}"
  when: docker_registry != ""
  retries: 3

- name: "pull blackboxes action images with tag {{docker_image_tag}}"
  shell: "docker pull {{docker_registry}}{{docker_image_prefix}}/{{item.name}}:{{docker_image_tag}}"
  with_items:
    - "{{ runtimesManifest.blackboxes }}"
  when: docker_registry != ""
  retries: 3

- name: determine docker root dir
  uri:  url="http://{{ inventory_hostname }}:{{ docker.port }}/info" return_content=yes
  register: dockerInfo

- name: ensure invoker log directory is created with permissions
  file:
    path: "{{ whisk_logs_dir }}/invoker{{ groups['invokers'].index(inventory_hostname) }}"
    state: directory
    mode: 0777
  become: true

- name: define options when deploying invoker on Ubuntu
  set_fact:
    linuxOptions: "-v /usr/lib/x86_64-linux-gnu/libapparmor.so.1:/usr/lib/x86_64-linux-gnu/libapparmor.so.1"
  when: whisk_version_name != "mac"

- name: get running invoker information
  uri: url="http://{{ inventory_hostname }}:{{ docker.port }}/containers/json?filters={{ '{"name":[ "invoker" ]}' | urlencode }}" return_content=yes
  register: invokerInfo

- name: determine if more than one invoker is running
  fail: msg="more than one invoker is running"
  when: invokerInfo.json|length > 1

- name: determine if index of invoker is same with index of inventory host
  fail:
    msg: "invoker index is invalid. expected: /invoker{{ groups['invokers'].index(inventory_hostname) }} found: {{ item.Names[0] }}"
  with_items: "{{ invokerInfo.json }}"
  when: item.Names[0] != "/invoker{{ groups['invokers'].index(inventory_hostname) }}"

- name: start invoker using docker cli
  shell: >
        docker run -d
        --userns=host
        --pid=host
        --privileged
        {{ linuxOptions | default('') }}
        --name invoker{{ groups['invokers'].index(inventory_hostname) }}
        --hostname invoker{{ groups['invokers'].index(inventory_hostname) }}
        --restart {{ docker.restart.policy }}
        -e COMPONENT_NAME=invoker{{ groups['invokers'].index(inventory_hostname) }}
        -e CONSULSERVER_HOST={{ groups['consul_servers'] | first }}
        -e CONSUL_HOST_PORT4={{ consul.port.http }}
        -e PORT=8080
        -e SELF_DOCKER_ENDPOINT=localhost
        -e SERVICE_CHECK_HTTP=/ping
        -e SERVICE_CHECK_TIMEOUT=2s
        -e SERVICE_CHECK_INTERVAL=15s
        -e JAVA_OPTS=-Xmx{{ invoker.heap }}
        -e INVOKER_OPTS='{{ invoker.arguments }}'
        -v /sys/fs/cgroup:/sys/fs/cgroup
        -v /run/runc:/run/runc
        -v {{ whisk_logs_dir }}/invoker{{ groups['invokers'].index(inventory_hostname) }}:/logs
        -v {{ dockerInfo["json"]["DockerRootDir"] }}/containers/:/containers
        -v {{ docker_sock | default('/var/run/docker.sock') }}:/var/run/docker.sock
        -p {{ invoker.port + groups['invokers'].index(inventory_hostname) }}:8080
        {{ docker_registry }}{{ docker_image_prefix }}/invoker:{{ docker_image_tag }}
        /bin/sh -c "exec /invoker/bin/invoker {{ groups['invokers'].index(inventory_hostname) }} >> /logs/invoker{{ groups['invokers'].index(inventory_hostname) }}_logs.log 2>&1"
  when: invokerInfo.json|length == 0

# todo: re-enable docker_container module once https://github.com/ansible/ansible-modules-core/issues/5054 is resolved

- name: wait until Invoker is up and running
  uri:
    url: "http://{{ inventory_hostname }}:{{ invoker.port + groups['invokers'].index(inventory_hostname) }}/ping"
  register: result
  until: result.status == 200
  retries: 12
  delay: 5
